#Workspaces:
group_names = [("", {'layout': 'monadwide'}),
               ("", {'layout': 'monadtall'}),#
               ("", {'layout': 'monadtall'}),
               ("", {'layout': 'monadtall'}),
               ("", {'layout': 'monadtall'}),
               ("", {'layout': 'monadtall'}),
               ("", {'layout': 'monadtall'}),
               ("", {'layout': 'ratiotile'}),
               ("", {'layout': 'ratiotile'})]

groups = [Group(name, **kwargs) for name, kwargs in group_names]

for i, (name, kwargs) in enumerate(group_names, 1):
    keys.append(Key([mod], str(i), lazy.group[name].toscreen()))        # Switch to another group
    keys.append(Key([mod, "shift"], str(i), lazy.window.togroup(name))) # Send current window to another group


colors = [
 	["#1E222A", "#1E222A"],  # 0 super dark one-dark background,very similar to the super dark nordic background
#	["#242831", "#242831"],  # 0 super dark nordic background
	#["#2e3440", "#2e3440"], # 0 lighter dark nordic background(same color as nordic wallpaper backgrounds however)
	["#3b4252", "#3b4252"],  # 1 background lighter
	["#81a1c1", "#81a1c1"],  # 2 foreground
	["#bf616a", "#bf616a"],  # 3 red
	["#a3be8c", "#a3be8c"],  # 4 green
	["#ebcb8b", "#ebcb8b"],  # 5 yellow
	["#81a1c1", "#81a1c1"],  # 6 blue
	["#d8dee9", "#d8dee9"],  # 7 white
	["#88c0d0", "#88c0d0"],  # 8 cyan
	["#b48ead", "#b48ead"],  # 9 magenta
	["#4c566a", "#4c566a"],  # 10 grey
	["#d08770", "#d08770"],  # 11 orange
	["#8fbcbb", "#8fbcbb"],  # 12 super cyan
	["#5e81ac", "#5e81ac"],  # 13 super blue
        ["#61afef", "#61afef"],  # 14 blue
        ["#333945", "#333945"],  # 15 one dark black-bright(doom emac's highlighted text color)
]
prompt = "{0}@{1}: ".format(os.environ["USER"], socket.gethostname())

#Layouts:

layout_theme = {"border_width": 4,
                "margin": 0,
                "border_focus": "#bf616a",
                "border_normal": "#81A1C1"
                }

layouts = [
layout.MonadTall(**layout_theme,ratio=0.55,),
layout.MonadWide(**layout_theme),
layout.Max(**layout_theme),
]

##### DEFAULT WIDGET SETTINGS #####
widget_defaults = dict(
    font="Source Code Pro Medium",
    fontsize = 16,
    padding = 8,
    foreground = colors[2],
    background=colors[1]
)
extension_defaults = widget_defaults.copy()


#### Mouse_callback functions

def open_powermenu():
	qtile.cmd_spawn("systemctl suspend")

#### Widgets and Bar

def init_widgets_list():
    widgets_list = [
            widget.Spacer(
                length = 2,
                background = colors[0]
            ),

# Left Side of the bar-------------------------------------
widget.GroupBox(
    font = "Source Code Pro",
    disable_drag = True,
    fontsize = 18,
    margin_y = 3,
    margin_x = 15,
    padding_y = 2,
    padding_x = 0,
    borderwidth = 4,
    active = colors[2],
    inactive = colors[2],
    rounded = True,
    highlight_color = colors[1],
    highlight_method = "line",
    this_current_screen_border = colors[2],
    this_screen_border = colors [2],
    other_current_screen_border = colors[2],
    other_screen_border = colors[3],
    foreground = colors[2],
    background = colors[0]
),
# Centre of the bar----------------------------------------
widget.Spacer(
    length = 8,
    background = colors[15]
),
widget.TextBox(
    font = "Iosevka Nerd Font",
    fontsize = 18,
    text = "",
    foreground = colors[14],
    background = colors[15]
),
widget.CPU(
    font = "Source Code Pro Medium",
    format = "{load_percent}%",
    fontsize = 16,
    foreground = colors[14],
    background = colors[15],
    update_interval = 5
),
widget.TextBox(
    font = "Iosevka Nerd Font",
    fontsize = 18,
    text = "",
    foreground = colors[5],
    background = colors[15]
),
widget.Memory(
    font = "Source Code Pro Medium",
    fontsize = 16,
    format = "{MemUsed:.0f}{mm}",
    foreground = colors[5],
    background = colors[15],
    update_interval = 5
),
widget.TextBox(
    font = "Iosevka Nerd Font",
    fontsize = 17,
    text = "",
    foreground = colors[12],
    background = colors[15]
),
widget.NvidiaSensors(
    font = "Source Code Pro Medium",
    fontsize = 16,
    foreground = colors[12],
    foreground_alert = colors[2],
    background = colors[15],
    update_interval = 5
),
widget.NetGraph(
    background = colors[15]
),
widget.Systray(
    background = colors[15]
),
widget.Spacer(
    length = bar.STRETCH,
    background = colors[15]
),
###Right-side of bar---------------------------------
widget.TextBox(
    text = "  ",
    padding = 2,
    foreground = colors[7],
    background = colors[0],
    fontsize = 17,
    font = "Iosevka Nerd Font",
),
widget.CurrentLayout(
    font = "Source Code Pro Medium",
    fontsize = 16,
    foreground = colors[7],
    background = colors[0]
),
widget.TextBox(
    font="FontAwesome",
    text=" ",
    foreground=colors[9],
    background=colors[0],
    padding = 0,
    fontsize=18
),
widget.Battery(
    font="Noto Sans",
    format = "{percent:2.0%}",
    update_interval = 60,
    fontsize = 16,
    foreground = colors[9],
    background = colors[0],
),
widget.TextBox(
    text = " Vol",
    foreground = colors[8],
    background = colors[0],
    padding = 0,
    fontsize=16
),
widget.Volume(
    foreground = colors[8],
    background = colors[0],
    padding = 5,
    fontsize = 16,
    update_interval = 0.1,
    step = 5
),
widget.TextBox(
    font = "Iosevka Nerd Font",
    fontsize = 18,
    text = "",
    foreground = colors[4],
    background = colors[0]
),
widget.Clock(
    font = "Source Code Pro Medium",
    format = '%a %d %b(%m)',
    fontsize = 16,
    foreground = colors[4],
    background = colors[0]
),
widget.Clock(
    font = "Source Code Pro Medium",
    format = '%I:%M:%S %p ',
    fontsize = 16,
    foreground = colors[4],
    background = colors[0]
),
widget.TextBox(
    text="⏻",
    foreground=colors[3],
    background=colors[0],
    font="Font Awesome 5 Free Solid",
    fontsize=23,
    padding= 2,
    mouse_callbacks={"Button1": open_powermenu},
),
widget.Spacer(
    length = 5,
    background = colors[0]
            )
]
    return widgets_list
